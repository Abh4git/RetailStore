// <auto-generated />
using System;
using Indus.Store.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Indus.Store.Services.Migrations
{
    [DbContext(typeof(RetailStoreContext))]
    partial class RetailStoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Indus.Store.Models.Customer", b =>
                {
                    b.Property<int>("customer_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address_line1");

                    b.Property<string>("address_line2");

                    b.Property<string>("address_line3");

                    b.Property<string>("address_line4");

                    b.Property<string>("country");

                    b.Property<string>("county_or_province");

                    b.Property<string>("email_address");

                    b.Property<string>("first_name");

                    b.Property<int>("gender");

                    b.Property<string>("last_name");

                    b.Property<string>("login_name");

                    b.Property<string>("login_password");

                    b.Property<string>("middle_name");

                    b.Property<string>("organization_name");

                    b.Property<byte>("organization_or_person");

                    b.Property<string>("phone_number");

                    b.Property<string>("town_city");

                    b.HasKey("customer_id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Indus.Store.Models.Customer_Payment_Detail", b =>
                {
                    b.Property<int>("customer_payment_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Ref_Payment_Typespayment_type_code");

                    b.Property<string>("credit_card_detail");

                    b.Property<int>("customer_id");

                    b.Property<int>("customer_payment_type_code");

                    b.Property<string>("payment_details");

                    b.HasKey("customer_payment_id");

                    b.HasIndex("Ref_Payment_Typespayment_type_code");

                    b.HasIndex("customer_id")
                        .IsUnique();

                    b.ToTable("Customer_Payment_Details");
                });

            modelBuilder.Entity("Indus.Store.Models.Invoice", b =>
                {
                    b.Property<int>("invoice_number")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("invoice_date");

                    b.Property<string>("invoice_details");

                    b.Property<int>("invoice_status_code");

                    b.Property<int>("order_id");

                    b.HasKey("invoice_number");

                    b.HasIndex("invoice_status_code");

                    b.HasIndex("order_id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Indus.Store.Models.Order", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("customer_id");

                    b.Property<DateTime>("date_order_placed");

                    b.Property<string>("order_details");

                    b.Property<int>("order_status_code");

                    b.HasKey("order_id");

                    b.HasIndex("customer_id");

                    b.HasIndex("order_status_code");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Indus.Store.Models.Order_Item", b =>
                {
                    b.Property<int>("order_item_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RMA_issued_by");

                    b.Property<DateTime>("RMA_issued_date");

                    b.Property<int>("RMA_number");

                    b.Property<int>("order_id");

                    b.Property<int>("order_item_price");

                    b.Property<int>("order_item_quantity");

                    b.Property<int>("order_item_status_code");

                    b.Property<string>("other_order_item_details");

                    b.Property<int>("product_id");

                    b.HasKey("order_item_id");

                    b.HasIndex("order_id");

                    b.HasIndex("order_item_status_code");

                    b.ToTable("Order_Items");
                });

            modelBuilder.Entity("Indus.Store.Models.Payment", b =>
                {
                    b.Property<int>("invoice_number")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("invoice_number1");

                    b.Property<decimal>("payment_amount");

                    b.Property<DateTime>("payment_date");

                    b.Property<int>("payment_id");

                    b.HasKey("invoice_number");

                    b.HasIndex("invoice_number1");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Indus.Store.Models.Product", b =>
                {
                    b.Property<int>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("product_color");

                    b.Property<string>("product_description");

                    b.Property<string>("product_name");

                    b.Property<string>("product_other_details");

                    b.Property<double>("product_price");

                    b.Property<string>("product_size");

                    b.Property<int>("product_type_code");

                    b.Property<string>("return_merchant_authorization_nr");

                    b.HasKey("product_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Indus.Store.Models.Ref_Invoice_Status", b =>
                {
                    b.Property<int>("invoice_status_code")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("invoice_status_description");

                    b.HasKey("invoice_status_code");

                    b.ToTable("Ref_Invoice_Statuses");
                });

            modelBuilder.Entity("Indus.Store.Models.Ref_Order_Item_Status", b =>
                {
                    b.Property<int>("order_item_status_code")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("order_item_status_description");

                    b.HasKey("order_item_status_code");

                    b.ToTable("Ref_Order_Item_Statuses");
                });

            modelBuilder.Entity("Indus.Store.Models.Ref_Order_Status", b =>
                {
                    b.Property<int>("order_status_code")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("order_status_description");

                    b.HasKey("order_status_code");

                    b.ToTable("Ref_Order_Status");
                });

            modelBuilder.Entity("Indus.Store.Models.Ref_Payment_Type", b =>
                {
                    b.Property<int>("payment_type_code")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("payment_type_description");

                    b.HasKey("payment_type_code");

                    b.ToTable("Ref_Payment_Types");
                });

            modelBuilder.Entity("Indus.Store.Models.Shipment", b =>
                {
                    b.Property<int>("shipment_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("invoice_number");

                    b.Property<int?>("order_id");

                    b.Property<string>("other_shipment_details");

                    b.Property<DateTime>("shipment_date");

                    b.Property<int>("shipment_tracking_number");

                    b.HasKey("shipment_id");

                    b.HasIndex("invoice_number");

                    b.HasIndex("order_id");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("Indus.Store.Models.Shipment_Item", b =>
                {
                    b.Property<int>("shipment_Item_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("order_Item_id");

                    b.Property<int?>("shipment_id");

                    b.HasKey("shipment_Item_id");

                    b.HasIndex("order_Item_id");

                    b.HasIndex("shipment_id");

                    b.ToTable("Shipment_Items");
                });

            modelBuilder.Entity("Indus.Store.Models.Customer_Payment_Detail", b =>
                {
                    b.HasOne("Indus.Store.Models.Ref_Payment_Type", "Ref_Payment_Types")
                        .WithMany()
                        .HasForeignKey("Ref_Payment_Typespayment_type_code");

                    b.HasOne("Indus.Store.Models.Customer", "Customers")
                        .WithOne("Customer_Payment_Details")
                        .HasForeignKey("Indus.Store.Models.Customer_Payment_Detail", "customer_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Indus.Store.Models.Invoice", b =>
                {
                    b.HasOne("Indus.Store.Models.Ref_Invoice_Status", "Ref_Invoice_Status")
                        .WithMany()
                        .HasForeignKey("invoice_status_code")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Indus.Store.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Indus.Store.Models.Order", b =>
                {
                    b.HasOne("Indus.Store.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Indus.Store.Models.Ref_Order_Status", "Ref_Order_Status")
                        .WithMany("Orders")
                        .HasForeignKey("order_status_code")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Indus.Store.Models.Order_Item", b =>
                {
                    b.HasOne("Indus.Store.Models.Order", "Order")
                        .WithMany("Order_Items")
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Indus.Store.Models.Ref_Order_Item_Status", "Ref_Order_Item_Status")
                        .WithMany()
                        .HasForeignKey("order_item_status_code")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Indus.Store.Models.Payment", b =>
                {
                    b.HasOne("Indus.Store.Models.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("invoice_number1");
                });

            modelBuilder.Entity("Indus.Store.Models.Shipment", b =>
                {
                    b.HasOne("Indus.Store.Models.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("invoice_number")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Indus.Store.Models.Order", "Order")
                        .WithMany("Shipments")
                        .HasForeignKey("order_id");
                });

            modelBuilder.Entity("Indus.Store.Models.Shipment_Item", b =>
                {
                    b.HasOne("Indus.Store.Models.Order_Item", "Order_Item")
                        .WithMany()
                        .HasForeignKey("order_Item_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Indus.Store.Models.Shipment", "Shipment")
                        .WithMany("Shipment_Items")
                        .HasForeignKey("shipment_id");
                });
#pragma warning restore 612, 618
        }
    }
}
